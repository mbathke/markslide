#!/usr/bin/env node

const fs = require('fs')
const minimist = require('minimist')
const opn = require('opn')
const path = require('path')

const Utils = require('../src/Utils')

const argv = minimist(process.argv.slice(2), { alias: { h: 'help' } })
const command = argv._[0]
const filePath = argv._[1]

const server = require('../src/Server')({
  port: argv.port
})

function help () {
  fs.createReadStream(path.join(__dirname, 'usage.txt')).pipe(process.stdout)
}

function log (message) {
  if (argv.verbose) {
    console.log('[markslide]' + message)
  }
}

function open (uri) {
  opn(uri, {app: Utils.splitCommandLine(argv.browser)}).then(null, () => {
    console.log('cannot open browser, please visit ' + server.URI)
  })
}

function run () {
  switch (command) {
    case 'start': 
      if (!filePath) {
        help()
        return
      }
  
      server.start(filePath, (err) => {
        if (err) throw err
        if (argv.open) open(server.URI)
        log('markdowning started on ' + server.URI)
      })
      break
      
    case 'stop':
      server.stop(err => {
        if (err) log('cannot kill the server, is it running?')
      })
      break
    
    default:
      help()
  }
}

run()
